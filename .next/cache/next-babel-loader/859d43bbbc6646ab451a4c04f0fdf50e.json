{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/andy/code/private-projects/pokeapi/components/autoComplete/index.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\n\nvar autoComplete = function autoComplete(props) {\n  var options = props.options,\n      onSelect = props.onSelect;\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var _React$useState3 = React.useState(options),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      fList = _React$useState4[0],\n      setFList = _React$useState4[1];\n\n  function _onChange(e) {\n    setValue(e.target.value);\n    var newList = options.filter(function (poke) {\n      return poke.name.toLowerCase().includes(e.target.value.toLowerCase());\n    });\n    setFList(newList);\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"input\", {\n    id: \"poke-search\",\n    placeholder: \"Search Pokemon...\",\n    onChange: function onChange(e) {\n      return _onChange(e);\n    },\n    value: value,\n    type: \"search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"auto-complete-options\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, fList.map(function (poke, i) {\n    return __jsx(\"li\", {\n      onClick: function onClick() {\n        onSelect(poke);\n      },\n      key: \"\".concat(poke.name, \"-\").concat(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, poke.name.substr(0)[0].toUpperCase(), poke.name.substring(1).toLowerCase());\n  }))));\n};\n\nexport default autoComplete;","map":{"version":3,"sources":["/Users/andy/code/private-projects/pokeapi/components/autoComplete/index.jsx"],"names":["React","autoComplete","props","options","onSelect","useState","value","setValue","fList","setFList","onChange","e","target","newList","filter","poke","name","toLowerCase","includes","map","i","substr","toUpperCase","substring"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK,EAAI;AAAA,MAE1BC,OAF0B,GAIxBD,KAJwB,CAE1BC,OAF0B;AAAA,MAG1BC,QAH0B,GAIxBF,KAJwB,CAG1BE,QAH0B;;AAAA,wBAMFJ,KAAK,CAACK,QAAN,CAAe,EAAf,CANE;AAAA;AAAA,MAMrBC,KANqB;AAAA,MAMdC,QANc;;AAAA,yBAOFP,KAAK,CAACK,QAAN,CAAeF,OAAf,CAPE;AAAA;AAAA,MAOrBK,KAPqB;AAAA,MAOdC,QAPc;;AAS5B,WAASC,SAAT,CAAkBC,CAAlB,EAAqB;AACnBJ,IAAAA,QAAQ,CAACI,CAAC,CAACC,MAAF,CAASN,KAAV,CAAR;AACA,QAAMO,OAAO,GAAGV,OAAO,CAACW,MAAR,CAAe,UAAAC,IAAI;AAAA,aACjCA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CACEP,CAAC,CAACC,MAAF,CAASN,KAAT,CAAeW,WAAf,EADF,CADiC;AAAA,KAAnB,CAAhB;AAKAR,IAAAA,QAAQ,CAACI,OAAD,CAAR;AACD;;AAED,SACE,4BACE;AAAO,IAAA,EAAE,EAAE,aAAX;AAA0B,IAAA,WAAW,EAAE,mBAAvC;AAA4D,IAAA,QAAQ,EAAE,kBAACF,CAAD;AAAA,aAAOD,SAAQ,CAACC,CAAD,CAAf;AAAA,KAAtE;AAA0F,IAAA,KAAK,EAAEL,KAAjG;AAAwG,IAAA,IAAI,EAAE,QAA9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCE,KAAK,CAACW,GAAN,CAAU,UAACJ,IAAD,EAAOK,CAAP;AAAA,WACT;AAAI,MAAA,OAAO,EAAE,mBAAM;AACjBhB,QAAAA,QAAQ,CAACW,IAAD,CAAR;AACD,OAFD;AAEG,MAAA,GAAG,YAAKA,IAAI,CAACC,IAAV,cAAkBI,CAAlB,CAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGGL,IAAI,CAACC,IAAL,CAAUK,MAAV,CAAiB,CAAjB,EAAoB,CAApB,EAAuBC,WAAvB,EAHH,EAGyCP,IAAI,CAACC,IAAL,CAAUO,SAAV,CAAoB,CAApB,EAAuBN,WAAvB,EAHzC,CADS;AAAA,GAAV,CADD,CADF,CAFF,CADF;AAgBD,CAnCD;;AAqCA,eAAehB,YAAf","sourcesContent":["import React from 'react';\n\nconst autoComplete = props => {\n  const {\n    options,\n    onSelect\n  } = props;\n  \n  const [value, setValue] = React.useState('');\n  const [fList, setFList] = React.useState(options);\n  \n  function onChange(e) {\n    setValue(e.target.value);\n    const newList = options.filter(poke =>\n      poke.name.toLowerCase().includes(\n        e.target.value.toLowerCase()\n      )\n    );\n    setFList(newList);\n  }\n  \n  return (\n    <>\n      <input id={\"poke-search\"} placeholder={\"Search Pokemon...\"} onChange={(e) => onChange(e)} value={value} type={\"search\"} />\n      <div className=\"auto-complete-options\">\n        <ul>\n        {fList.map((poke, i) => (\n          <li onClick={() => {\n            onSelect(poke);\n          }} key={`${poke.name}-${i}`}>\n            {poke.name.substr(0)[0].toUpperCase()}{poke.name.substring(1).toLowerCase()}\n          </li>\n        ))}\n        </ul>\n      </div>\n    </>\n  )\n};\n\nexport default autoComplete;\n"]},"metadata":{},"sourceType":"module"}